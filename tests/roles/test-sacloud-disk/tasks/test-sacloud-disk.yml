---
- name: Test fail if missing access_token
  sacloud_disk:
    access_token_secret: "{{ lookup('env', 'ACCESS_TOKEN_SECRET') }}"
  register: result
  ignore_errors: yes
- name: Verify results of fail if missing params
  assert:
    that:
      - result|failed
      - 'result.msg == "missing required arguments: access_token"'

- name: Test fail if missing access_token_secret
  sacloud_disk:
    access_token: "{{ lookup('env', 'ACCESS_TOKEN') }}"
  register: result
  ignore_errors: yes
- name: Verify results of fail if missing params
  assert:
    that:
      - result|failed
      - 'result.msg == "missing required arguments: access_token_secret"'

- name: Test fail if missing archive_resource_id
  sacloud_disk:
    access_token: "{{ lookup('env', 'ACCESS_TOKEN') }}"
    access_token_secret: "{{ lookup('env', 'ACCESS_TOKEN_SECRET') }}"
  register: result
  ignore_errors: yes
- name: Verify results of fail if missing params
  assert:
    that:
      - result|failed
      - 'result.msg == "missing required arguments: archive_resource_id"'

- name: Test if sacloud disk successfully created
  sacloud_disk:
    access_token: "{{ lookup('env', 'ACCESS_TOKEN') }}"
    access_token_secret: "{{ lookup('env', 'ACCESS_TOKEN_SECRET') }}"
    archive_resource_id: "{{ lookup('env', 'ARCHIVE_RESOURCE_ID') }}"
    zone_id: is1a
    name: a test disk
    icon: Ubuntu
    plan: ssd
    size_gib: 20
    desc: |-
      this
      is
      a
      disk
    tags:
      - virtio-net-pci
      - boot-cdrom
    config_host_name: example.com
    config_password: pAssw0rd
    config_ipv4_address: 192.168.0.2
    config_ssh_key: "{{ lookup('file', '../../../keys/id_rsa.pub') }}"
    config_network_mask_len: 28
    config_default_route: 192.168.0.1
    state: present
  register: result
- name: Verify results of success
  assert:
    that:
      - result|success

- name: Test if sacloud disk successfully updated
  sacloud_disk:
    access_token: "{{ lookup('env', 'ACCESS_TOKEN') }}"
    access_token_secret: "{{ lookup('env', 'ACCESS_TOKEN_SECRET') }}"
    resource_id: "{{ sacloud_disk_resource_id }}"
    state: present
  register: result
- name: Verify results of success
  assert:
    that:
      - result|success

- name: Test fail if non exist resource id
  sacloud_disk:
    access_token: "{{ lookup('env', 'ACCESS_TOKEN') }}"
    access_token_secret: "{{ lookup('env', 'ACCESS_TOKEN_SECRET') }}"
    resource_id: 1
    state: absent
  register: result
  ignore_errors: yes
- name: Verify results of fail if non exist resource id
  assert:
    that:
      - result|failed

- name: Test fail if state is absent and no resource id
  sacloud_disk:
    access_token: "{{ lookup('env', 'ACCESS_TOKEN') }}"
    access_token_secret: "{{ lookup('env', 'ACCESS_TOKEN_SECRET') }}"
    state: absent
  register: result
  ignore_errors: yes
- name: Verify results of fail if missing params
  assert:
    that:
      - result|failed
      - 'result.msg == "missing required arguments: resource_id"'

- name: Test if sacloud disk successfully removed
  sacloud_disk:
    access_token: "{{ lookup('env', 'ACCESS_TOKEN') }}"
    access_token_secret: "{{ lookup('env', 'ACCESS_TOKEN_SECRET') }}"
    resource_id: "{{ sacloud_disk_resource_id }}"
    state: absent
  register: result
- name: Verify results of success
  assert:
    that:
      - result|success

- name: Setup sacloud server
  sacloud_server:
    access_token: "{{ lookup('env', 'ACCESS_TOKEN') }}"
    access_token_secret: "{{ lookup('env', 'ACCESS_TOKEN_SECRET') }}"
    state: present
- name: Test if connect to sacloud server successfully
  sacloud_disk:
    access_token: "{{ lookup('env', 'ACCESS_TOKEN') }}"
    access_token_secret: "{{ lookup('env', 'ACCESS_TOKEN_SECRET') }}"
    archive_resource_id: "{{ lookup('env', 'ARCHIVE_RESOURCE_ID') }}"
    connect: "{{ sacloud_server_resource_id }}"
    zone_id: is1a
    name: a test disk
    icon: Ubuntu
    plan: ssd
    size_gib: 20
    desc: |-
      this
      is
      a
      disk
    tags:
      - virtio-net-pci
      - boot-cdrom
    config_host_name: example.com
    config_password: pAssw0rd
    config_ipv4_address: 192.168.0.2
    config_ssh_key: "{{ lookup('file', '../../../keys/id_rsa.pub') }}"
    config_network_mask_len: 28
    config_default_route: 192.168.0.1
    state: present
  register: result
- name: Verify results of success
  assert:
    that:
      - result|success

- name: Test fail if non exist server resource id
  sacloud_disk:
    access_token: "{{ lookup('env', 'ACCESS_TOKEN') }}"
    access_token_secret: "{{ lookup('env', 'ACCESS_TOKEN_SECRET') }}"
    archive_resource_id: "{{ lookup('env', 'ARCHIVE_RESOURCE_ID') }}"
    connect: 1
    state: present
  register: result
  ignore_errors: yes
- name: Verify results of fail if non exist server resource id
  assert:
    that:
      - result|failed
      - 'result.msg == "Failed to find server: 1"'

# BUG?
- name: Teardown sacloud server
  sacloud_server:
    access_token: "{{ lookup('env', 'ACCESS_TOKEN') }}"
    access_token_secret: "{{ lookup('env', 'ACCESS_TOKEN_SECRET') }}"
    resource_id: "{{ sacloud_disk_resource_id }}"
    state: absent
  ignore_errors: yes
- name: Teardown sacloud disk
  sacloud_disk:
    access_token: "{{ lookup('env', 'ACCESS_TOKEN') }}"
    access_token_secret: "{{ lookup('env', 'ACCESS_TOKEN_SECRET') }}"
    resource_id: "{{ sacloud_disk_resource_id }}"
    state: absent
  ignore_errors: yes
